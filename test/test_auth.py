# coding: utf-8

"""
    Sentim's Emotion APIs

    An emotion recognition api that tells you the emotion of text, and not just the connotation.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: help@sentimllc.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import sentim
from sentim.rest import ApiException
from pprint import pprint

class TestAuthApi(unittest.TestCase):
  """Test out the authentication api"""

  def setUp(self):
    pass
  
  def tearDown(self):
    pass

  def test_get_access_token_failure(self):
    """Test case for get_access_token with invalid client id and secret

    Oauth 2.0 authentication handler  # noqa: E501
    
    Throws an error on failure.
    """
    configuration = sentim.Configuration()
    # Defining host is optional and default to https://api.sentimllc.com
    configuration.host = "https://api.sentimllc.com"
    # Create an instance of the API class to request an api token
    api_instance = sentim.DefaultApi(sentim.ApiClient(configuration))
    
    # test invalid client id and secret
    try:
      invalid_out = api_instance.get_access_token("invalid id", "invalid secret")
      raise "WrongError"
    except ApiException as e:
      assert(e.status == 401)
      
  def test_get_access_token(self):
    """Test case for get_access_token success

    Oauth 2.0 authentication handler  # noqa: E501
    
    Throws an error on failure.
    """
    configuration = sentim.Configuration()
    # Defining host is optional and default to https://api.sentimllc.com
    configuration.host = "https://api.sentimllc.com"
    # Create an instance of the API class to request an api token
    self.api_instance = sentim.DefaultApi(sentim.ApiClient(configuration))
    
    path_to_credentials = "/path/to/credentials"
    with open(path_to_credentials, "r") as f:
      client_id, client_secret = f.readlines()[1].split(",")
      # Configure OAuth2 access token for authorization: sentim_auth
      configuration.access_token = self.api_instance.get_access_token(client_id, client_secret)
      assert(isinstance(configuration.access_token, str))
      #override instance with access token now that we've authenticated
      self.api_instance = sentim.DefaultApi(sentim.ApiClient(configuration))


if __name__ == '__main__':
    unittest.main()
